name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
        env:
          CONSUMER_API_KEY: ${{ secrets.CONSUMER_API_KEY }}
          CONSUMER_API_SECRET_KEY: ${{ secrets.CONSUMER_API_SECRET_KEY }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      - name: Count changes
        id: changes
        run: echo "::set-output name=count::$(git diff --name-only | wc -l)"
      - name: Commit
        run: |
          git add -A
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "npm run all"
          git push
        if: steps.changes.outputs.count > 0 && ${{ github.event.pull_request }}
  test: # make sure the action works on a clean machine without building
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-2019]
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        env:
          CONSUMER_API_KEY: ${{ secrets.CONSUMER_API_KEY }}
          CONSUMER_API_SECRET_KEY: ${{ secrets.CONSUMER_API_SECRET_KEY }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
        with:
          status: ${{ matrix.os }} ${{ github.job }} ${{ github.run_id }} ${{ github.run_number }} ${{ github.ref }} ${{ github.sha }}
